# Tig default configuration
#
# Please see 'man tigrc' for a complete reference.

# User-defined commands
# ---------------------
# These commands allow to run shell commands directly from within Tig.
# Unless otherwise specified, commands are run in the foreground with
# their console output shown (as if '!' was specified). When multiple
# command options are specified their behavior are combined, e.g. "?<git
# commit" will prompt the user whether to execute the command and will
# exit Tig after completion.
#
#   !	Run the command in the foreground with output shown.
#   @	Run the command in the background with no output.
#   ?	Prompt the user before executing the command.
#   <	Exit Tig after executing the command.
#
# User-defined commands can optionally refer to Tig's internal state
# using the following variable names, which are substituted before
# commands are run:
#
#   %(head)		The current ref ID. Defaults to HEAD
#   %(commit)		The current commit ID.
#   %(blob)		The current blob ID.
#   %(branch)		The current branch name.
#   %(stash)		The current stash name.
#   %(directory)	The current directory path in the tree view; 
#			empty for the root directory.
#   %(file)		The currently selected file.
#   %(ref)		The reference given to blame or HEAD if undefined.
#   %(revargs)		The revision arguments passed on the command line.
#   %(fileargs)		The file arguments passed on the command line.
#   %(cmdlineargs)	All other options passed on the command line.
#   %(diffargs)		The diff options from `diff-options` or `TIG_DIFF_OPTS`
#   %(prompt)		Prompt for the argument value.

bind main	C	?git cherry-pick %(commit)
bind status	C	!git commit
bind stash	P	?git stash pop %(stash)
bind branch	C	?git checkout %(branch)

# Normal commands
# ---------------

# View switching
bind generic	m	view-main
bind generic	d	view-diff
bind generic	l	view-log
bind generic	t	view-tree
bind generic	f	view-blob
bind generic	B	view-blame
bind generic	H	view-branch
bind generic	p	view-pager
bind generic	h	view-help
bind generic	S	view-status
bind generic	c	view-stage
bind generic	y	view-stash

# View manipulation
bind generic	Enter	enter			# Enter and open selected entry
bind generic	<	back			# Go back to the previous view state
bind generic	Down	next			# Move to next
bind generic	^N	next
bind generic	Up	previous		# Move to previous
bind generic	^P	previous
bind generic	,	parent			# Move to parent
bind generic	Tab	view-next		# Move focus to the next view
bind generic	R	refresh			# Reload and refresh
bind generic	F5	refresh
bind generic	O	maximize		# Maximize the current view
bind generic	q	view-close		# Close the current view
bind generic	Q	quit			# Close all views and quit

# View specific
bind status	u	status-update		# Stage/unstage changes in file
bind status	!	status-revert		# Revert changes in file
bind status	M	status-merge		# Open git-mergetool(1)
bind stage	u	status-update		# Stage/unstage current diff (c)hunk
bind stage	1	stage-update-line	# Stage/unstage current line
bind stage	!	status-revert		# Revert current diff (c)hunk
bind stage	@	stage-next		# Jump to next (c)hunk
bind stage	\	stage-split-chunk	# Split current diff (c)hunk
bind stage	[	diff-context-down	# Decrease the diff context
bind stage	]	diff-context-up		# Increase the diff context
bind diff	[	diff-context-down
bind diff	]	diff-context-up

# Cursor navigation
bind generic	k	move-up
bind generic	j	move-down
bind generic	PgDown	move-page-down
bind generic	^D	move-page-down
bind generic	Space	move-page-down
bind generic	PgUp	move-page-up
bind generic	^U	move-page-up
bind generic	b	move-page-up
bind generic	-	move-page-up
bind generic	Home	move-first-line
bind generic	End	move-last-line

# Scrolling
bind generic	|	scroll-first-col
bind generic	Left	scroll-left
bind generic	Right	scroll-right
bind generic	Insert	scroll-line-up
bind generic	^Y	scroll-line-up
bind generic	Delete	scroll-line-down
bind generic	^E	scroll-line-down
bind generic	w	scroll-page-up
bind generic	s	scroll-page-down

# Searching
bind generic	/	search
bind generic	?	search-back
bind generic	n	find-next
bind generic	N	find-prev

# Option manipulation
bind generic	o	options			# Open the option menu
bind generic	.	toggle-lineno
bind generic	D	toggle-date
bind generic	A	toggle-author
bind generic	g	toggle-rev-graph
bind generic	~	toggle-graphic
bind generic	Hash	toggle-filename
bind generic	F	toggle-refs
# bind generic	?	toogle-changes
bind generic	I	toggle-sort-order
bind generic	i	toggle-sort-field
bind generic	W	toggle-ignore-space
# bind generic	?	toggle-commit-order
bind generic	X	toggle-id
bind generic	%	toggle-files
bind generic	$	toggle-title-overflow
# bind generic	?	toggle-file-size
# bind genric	?	toggle-untracked-dirs

# Misc
bind generic	e	edit			# Open in editor
bind generic	:	prompt			# Open the prompt
bind generic	z	stop-loading		# Stop all loading views
bind generic	v	show-version		# Show Tig version
bind generic	r	screen-redraw		# Redraw the screen
bind generic	^L	screen-redraw

# Colors
# ------

# The colors in the UI can be customized. In addition to the colors used
# for the UI you can also define new colors to use in the pager, blob,
# diff, and stage views by placing the text to match for in quotes.
#
# As an example, this setting will to color Signed-off-by lines with a
# yellow foreground color and use the default background color.
#
#	color "    Signed-off-by"	yellow	default
#
# Note the four leading spaces in the string to match. This is because
# Git automatically indents commit messages by four spaces.

color "diff --"			yellow	default
color "@@"			magenta	default
color "+"			green	default
color " +"			green	default
color "-"			red	default
color " -"			red	default
color "index "			blue	default
color "old file mode "		yellow	default
color "new file mode "		yellow	default
color "deleted file mode "	yellow	default
color "copy from "		yellow	default
color "copy to "		yellow	default
color "rename from "		yellow	default
color "rename to "		yellow	default
color "similarity "		yellow	default
color "dissimilarity "		yellow	default
color "diff-tree "		blue	default
color "Author: "		cyan	default
color "Commit: "		magenta	default
color "Merge: "			blue	default
color "Date: "			yellow	default
color "AuthorDate: "		yellow	default
color "CommitDate: "		yellow	default
color "Refs: "			red	default
color "Reflog: "		red	default
color "Reflog message: "	yellow	default
color "stash@{"			magenta	default
color "commit "			green	default
color "parent "			blue	default
color "tree "			blue	default
color "author "			green	default
color "committer "		magenta	default
color "    Signed-off-by"	yellow	default
color "    Acked-by"		yellow	default
color "    Tested-by"		yellow	default
color "    Reviewed-by"		yellow	default
color default			default	default	normal
color cursor			white	green	bold
color status			green	default
color delimiter			magenta	default
color date			blue	default
color mode			cyan	default
color id			magenta	default
color overflow			red	default
color filename			default	default
color file-size			default	default
color line-number		cyan	default
color title-blur		white	blue
color title-focus		white	blue	bold
color main-commit		default	default
color main-tag			magenta	default	bold
color main-local-tag		magenta	default
color main-remote		yellow	default
color main-replace		cyan	default
color main-tracked		yellow	default	bold
color main-ref			cyan	default
color main-head			cyan	default	bold
color main-revgraph		magenta	default
color tree-head			default	default	bold
color tree-dir			yellow	default	normal
color tree-file			default	default	normal
color stat-head			yellow	default
color stat-section		cyan	default
color stat-none			default	default
color stat-staged		magenta	default
color stat-unstaged		magenta	default
color stat-untracked		magenta	default
color help-keymap		cyan	default
color help-group		blue	default
color diff-stat			blue	default
color palette-0			magenta	default
color palette-1			yellow	default
color palette-2			cyan	default
color palette-3			green	default
color palette-4			default	default
color palette-5			white	default
color palette-6			red	default
color graph-commit		blue	default
